

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun  2 09:31:33 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F16Q41
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 08/12/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F16Q41 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _ANSELCbits	set	1040
    55  0000                     _LATCbits	set	1216
    56  0000                     _TRISCbits	set	1224
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  00FF88                     __pcinit:
    62                           	callstack 0
    63  00FF88                     start_initialization:
    64                           	callstack 0
    65  00FF88                     __initialization:
    66                           	callstack 0
    67  00FF88                     end_of_initialization:
    68                           	callstack 0
    69  00FF88                     __end_of__initialization:
    70                           	callstack 0
    71  00FF88  0100               	movlb	0
    72  00FF8A  EFD1  F07F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000501                     __pcstackCOMRAM:
    76                           	callstack 0
    77  000501                     msDelay@DelayValueInMilliseconds:
    78                           	callstack 0
    79                           
    80                           ; 2 bytes @ 0x0
    81  000501                     	ds	2
    82  000503                     ??_msDelay:
    83                           
    84                           ; 1 bytes @ 0x2
    85  000503                     	ds	1
    86  000504                     
    87                           ; 1 bytes @ 0x3
    88 ;;
    89 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    90 ;;
    91 ;; *************** function _main *****************
    92 ;; Defined at:
    93 ;;		line 41 in file "mainHello.c"
    94 ;; Parameters:    Size  Location     Type
    95 ;;		None
    96 ;; Auto vars:     Size  Location     Type
    97 ;;		None
    98 ;; Return value:  Size  Location     Type
    99 ;;                  2   16[None  ] int 
   100 ;; Registers used:
   101 ;;		wreg, status,2, status,0, cstack
   102 ;; Tracked objects:
   103 ;;		On entry : 0/0
   104 ;;		On exit  : 0/0
   105 ;;		Unchanged: 0/0
   106 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   111 ;;Total ram usage:        0 bytes
   112 ;; Hardware stack levels required when called: 2
   113 ;; This function calls:
   114 ;;		_AppInit
   115 ;;		_led0Off
   116 ;;		_led0On
   117 ;;		_msDelay
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  00FFA2                     __ptext0:
   125                           	callstack 0
   126  00FFA2                     _main:
   127                           	callstack 125
   128  00FFA2                     
   129                           ;mainHello.c: 44:  AppInit();
   130  00FFA2  ECCC  F07F         	call	_AppInit	;wreg free
   131  00FFA6                     l17:
   132                           
   133                           ;mainHello.c: 49:         led0On();
   134  00FFA6  ECC2  F07F         	call	_led0On	;wreg free
   135  00FFAA                     
   136                           ;mainHello.c: 50:         msDelay(100);
   137  00FFAA  0E00               	movlw	0
   138  00FFAC  6E02               	movwf	(msDelay@DelayValueInMilliseconds+1)^(0+1280),c
   139  00FFAE  0E64               	movlw	100
   140  00FFB0  6E01               	movwf	msDelay@DelayValueInMilliseconds^(0+1280),c
   141  00FFB2  ECE7  F07F         	call	_msDelay	;wreg free
   142  00FFB6                     
   143                           ;mainHello.c: 51:         led0Off();
   144  00FFB6  ECC0  F07F         	call	_led0Off	;wreg free
   145                           
   146                           ;mainHello.c: 52:         msDelay(1000);
   147  00FFBA  0E03               	movlw	3
   148  00FFBC  6E02               	movwf	(msDelay@DelayValueInMilliseconds+1)^(0+1280),c
   149  00FFBE  0EE8               	movlw	232
   150  00FFC0  6E01               	movwf	msDelay@DelayValueInMilliseconds^(0+1280),c
   151  00FFC2  ECE7  F07F         	call	_msDelay	;wreg free
   152  00FFC6  EFD3  F07F         	goto	l17
   153  00FFCA  EFFE  F07F         	goto	start
   154  00FFCE                     __end_of_main:
   155                           	callstack 0
   156                           
   157 ;; *************** function _msDelay *****************
   158 ;; Defined at:
   159 ;;		line 30 in file "msDelay.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;  DelayValueIn    2    0[COMRAM] int 
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   177 ;;Total ram usage:        3 bytes
   178 ;; Hardware stack levels used: 1
   179 ;; This function calls:
   180 ;;		Nothing
   181 ;; This function is called by:
   182 ;;		_main
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text1
   187  00FFCE                     __ptext1:
   188                           	callstack 0
   189  00FFCE                     _msDelay:
   190                           	callstack 126
   191  00FFCE                     
   192                           ;msDelay.c: 31:     while(--DelayValueInMilliseconds){
   193  00FFCE  EFF1  F07F         	goto	l754
   194  00FFD2                     l752:
   195                           
   196                           ;msDelay.c: 32:         _delay((unsigned long)((1)*((64000000UL)/4000.0)));
   197  00FFD2  0E15               	movlw	21
   198  00FFD4  6E03               	movwf	??_msDelay^(0+1280),c
   199  00FFD6  0EC6               	movlw	198
   200  00FFD8                     u37:
   201  00FFD8  2EE8               	decfsz	wreg,f,c
   202  00FFDA  D7FE               	bra	u37
   203  00FFDC  2E03               	decfsz	??_msDelay^(0+1280),f,c
   204  00FFDE  D7FC               	bra	u37
   205  00FFE0  D000               	nop2	
   206  00FFE2                     l754:
   207                           
   208                           ;msDelay.c: 31:     while(--DelayValueInMilliseconds){
   209  00FFE2  0601               	decf	msDelay@DelayValueInMilliseconds^(0+1280),f,c
   210  00FFE4  A0D8               	btfss	status,0,c
   211  00FFE6  0602               	decf	(msDelay@DelayValueInMilliseconds+1)^(0+1280),f,c
   212  00FFE8  5001               	movf	msDelay@DelayValueInMilliseconds^(0+1280),w,c
   213  00FFEA  1002               	iorwf	(msDelay@DelayValueInMilliseconds+1)^(0+1280),w,c
   214  00FFEC  A4D8               	btfss	status,2,c
   215  00FFEE  EFFB  F07F         	goto	u21
   216  00FFF2  EFFD  F07F         	goto	u20
   217  00FFF6                     u21:
   218  00FFF6  EFE9  F07F         	goto	l752
   219  00FFFA                     u20:
   220  00FFFA  0012               	return		;funcret
   221  00FFFC                     __end_of_msDelay:
   222                           	callstack 0
   223                           
   224 ;; *************** function _led0On *****************
   225 ;; Defined at:
   226 ;;		line 30 in file "led.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		None
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text2
   254  00FF84                     __ptext2:
   255                           	callstack 0
   256  00FF84                     _led0On:
   257                           	callstack 126
   258  00FF84                     
   259                           ;led.c: 31:  LATCbits.LATC1 = 0;
   260  00FF84  92C0               	bcf	192,1,c	;volatile
   261  00FF86  0012               	return		;funcret
   262  00FF88                     __end_of_led0On:
   263                           	callstack 0
   264                           
   265 ;; *************** function _led0Off *****************
   266 ;; Defined at:
   267 ;;		line 34 in file "led.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		None
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels used: 1
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text3
   295  00FF80                     __ptext3:
   296                           	callstack 0
   297  00FF80                     _led0Off:
   298                           	callstack 126
   299  00FF80                     
   300                           ;led.c: 35:  LATCbits.LATC1 = 1;
   301  00FF80  82C0               	bsf	192,1,c	;volatile
   302  00FF82  0012               	return		;funcret
   303  00FF84                     __end_of_led0Off:
   304                           	callstack 0
   305                           
   306 ;; *************** function _AppInit *****************
   307 ;; Defined at:
   308 ;;		line 73 in file "mainHello.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; Hardware stack levels required when called: 1
   329 ;; This function calls:
   330 ;;		_ledInit
   331 ;;		_msDelayInit
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text4
   338  00FF98                     __ptext4:
   339                           	callstack 0
   340  00FF98                     _AppInit:
   341                           	callstack 125
   342  00FF98                     
   343                           ;mainHello.c: 82:  ledInit();
   344  00FF98  ECC7  F07F         	call	_ledInit	;wreg free
   345                           
   346                           ;mainHello.c: 85:  msDelayInit();
   347  00FF9C  ECBF  F07F         	call	_msDelayInit	;wreg free
   348  00FFA0  0012               	return		;funcret
   349  00FFA2                     __end_of_AppInit:
   350                           	callstack 0
   351                           
   352 ;; *************** function _msDelayInit *****************
   353 ;; Defined at:
   354 ;;		line 26 in file "msDelay.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		None
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels used: 1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_AppInit
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text5
   382  00FF7E                     __ptext5:
   383                           	callstack 0
   384  00FF7E                     _msDelayInit:
   385                           	callstack 125
   386  00FF7E  0012               	return		;funcret
   387  00FF80                     __end_of_msDelayInit:
   388                           	callstack 0
   389                           
   390 ;; *************** function _ledInit *****************
   391 ;; Defined at:
   392 ;;		line 24 in file "led.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		None
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used: 1
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		_AppInit
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text6
   420  00FF8E                     __ptext6:
   421                           	callstack 0
   422  00FF8E                     _ledInit:
   423                           	callstack 125
   424  00FF8E                     
   425                           ;led.c: 25:  ANSELCbits.ANSELC1 = 0;
   426  00FF8E  0104               	movlb	4	; () banked
   427  00FF90  9310               	bcf	16,1,b	;volatile
   428                           
   429                           ;led.c: 26:     LATCbits.LATC1 = 1;
   430  00FF92  82C0               	bsf	192,1,c	;volatile
   431                           
   432                           ;led.c: 27:     TRISCbits.TRISC1 = 0;
   433  00FF94  92C8               	bcf	200,1,c	;volatile
   434  00FF96                     
   435                           ; BSR set to: 4
   436  00FF96  0012               	return		;funcret
   437  00FF98                     __end_of_ledInit:
   438                           	callstack 0
   439  0000                     
   440                           	psect	rparam
   441  0000                     
   442                           	psect	idloc
   443                           
   444                           ;Config register IDLOC0 @ 0x200000
   445                           ;	unspecified, using default values
   446  200000                     	org	2097152
   447  200000  0FFF               	dw	4095
   448                           
   449                           ;Config register IDLOC1 @ 0x200002
   450                           ;	unspecified, using default values
   451  200002                     	org	2097154
   452  200002  0FFF               	dw	4095
   453                           
   454                           ;Config register IDLOC2 @ 0x200004
   455                           ;	unspecified, using default values
   456  200004                     	org	2097156
   457  200004  0FFF               	dw	4095
   458                           
   459                           ;Config register IDLOC3 @ 0x200006
   460                           ;	unspecified, using default values
   461  200006                     	org	2097158
   462  200006  0FFF               	dw	4095
   463                           
   464                           ;Config register IDLOC4 @ 0x200008
   465                           ;	unspecified, using default values
   466  200008                     	org	2097160
   467  200008  0FFF               	dw	4095
   468                           
   469                           ;Config register IDLOC5 @ 0x20000A
   470                           ;	unspecified, using default values
   471  20000A                     	org	2097162
   472  20000A  0FFF               	dw	4095
   473                           
   474                           ;Config register IDLOC6 @ 0x20000C
   475                           ;	unspecified, using default values
   476  20000C                     	org	2097164
   477  20000C  0FFF               	dw	4095
   478                           
   479                           ;Config register IDLOC7 @ 0x20000E
   480                           ;	unspecified, using default values
   481  20000E                     	org	2097166
   482  20000E  0FFF               	dw	4095
   483                           
   484                           ;Config register IDLOC8 @ 0x200010
   485                           ;	unspecified, using default values
   486  200010                     	org	2097168
   487  200010  0FFF               	dw	4095
   488                           
   489                           ;Config register IDLOC9 @ 0x200012
   490                           ;	unspecified, using default values
   491  200012                     	org	2097170
   492  200012  0FFF               	dw	4095
   493                           
   494                           ;Config register IDLOC10 @ 0x200014
   495                           ;	unspecified, using default values
   496  200014                     	org	2097172
   497  200014  0FFF               	dw	4095
   498                           
   499                           ;Config register IDLOC11 @ 0x200016
   500                           ;	unspecified, using default values
   501  200016                     	org	2097174
   502  200016  0FFF               	dw	4095
   503                           
   504                           ;Config register IDLOC12 @ 0x200018
   505                           ;	unspecified, using default values
   506  200018                     	org	2097176
   507  200018  0FFF               	dw	4095
   508                           
   509                           ;Config register IDLOC13 @ 0x20001A
   510                           ;	unspecified, using default values
   511  20001A                     	org	2097178
   512  20001A  0FFF               	dw	4095
   513                           
   514                           ;Config register IDLOC14 @ 0x20001C
   515                           ;	unspecified, using default values
   516  20001C                     	org	2097180
   517  20001C  0FFF               	dw	4095
   518                           
   519                           ;Config register IDLOC15 @ 0x20001E
   520                           ;	unspecified, using default values
   521  20001E                     	org	2097182
   522  20001E  0FFF               	dw	4095
   523                           
   524                           ;Config register IDLOC16 @ 0x200020
   525                           ;	unspecified, using default values
   526  200020                     	org	2097184
   527  200020  0FFF               	dw	4095
   528                           
   529                           ;Config register IDLOC17 @ 0x200022
   530                           ;	unspecified, using default values
   531  200022                     	org	2097186
   532  200022  0FFF               	dw	4095
   533                           
   534                           ;Config register IDLOC18 @ 0x200024
   535                           ;	unspecified, using default values
   536  200024                     	org	2097188
   537  200024  0FFF               	dw	4095
   538                           
   539                           ;Config register IDLOC19 @ 0x200026
   540                           ;	unspecified, using default values
   541  200026                     	org	2097190
   542  200026  0FFF               	dw	4095
   543                           
   544                           ;Config register IDLOC20 @ 0x200028
   545                           ;	unspecified, using default values
   546  200028                     	org	2097192
   547  200028  0FFF               	dw	4095
   548                           
   549                           ;Config register IDLOC21 @ 0x20002A
   550                           ;	unspecified, using default values
   551  20002A                     	org	2097194
   552  20002A  0FFF               	dw	4095
   553                           
   554                           ;Config register IDLOC22 @ 0x20002C
   555                           ;	unspecified, using default values
   556  20002C                     	org	2097196
   557  20002C  0FFF               	dw	4095
   558                           
   559                           ;Config register IDLOC23 @ 0x20002E
   560                           ;	unspecified, using default values
   561  20002E                     	org	2097198
   562  20002E  0FFF               	dw	4095
   563                           
   564                           ;Config register IDLOC24 @ 0x200030
   565                           ;	unspecified, using default values
   566  200030                     	org	2097200
   567  200030  0FFF               	dw	4095
   568                           
   569                           ;Config register IDLOC25 @ 0x200032
   570                           ;	unspecified, using default values
   571  200032                     	org	2097202
   572  200032  0FFF               	dw	4095
   573                           
   574                           ;Config register IDLOC26 @ 0x200034
   575                           ;	unspecified, using default values
   576  200034                     	org	2097204
   577  200034  0FFF               	dw	4095
   578                           
   579                           ;Config register IDLOC27 @ 0x200036
   580                           ;	unspecified, using default values
   581  200036                     	org	2097206
   582  200036  0FFF               	dw	4095
   583                           
   584                           ;Config register IDLOC28 @ 0x200038
   585                           ;	unspecified, using default values
   586  200038                     	org	2097208
   587  200038  0FFF               	dw	4095
   588                           
   589                           ;Config register IDLOC29 @ 0x20003A
   590                           ;	unspecified, using default values
   591  20003A                     	org	2097210
   592  20003A  0FFF               	dw	4095
   593                           
   594                           ;Config register IDLOC30 @ 0x20003C
   595                           ;	unspecified, using default values
   596  20003C                     	org	2097212
   597  20003C  0FFF               	dw	4095
   598                           
   599                           ;Config register IDLOC31 @ 0x20003E
   600                           ;	unspecified, using default values
   601  20003E                     	org	2097214
   602  20003E  0FFF               	dw	4095
   603                           
   604                           	psect	config
   605                           
   606                           ;Config register CONFIG1 @ 0x300000
   607                           ;	External Oscillator Selection
   608                           ;	FEXTOSC = OFF, Oscillator not enabled
   609                           ;	Reset Oscillator Selection
   610                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
   611  300000                     	org	3145728
   612  300000  8C                 	db	140
   613                           
   614                           ;Config register CONFIG2 @ 0x300001
   615                           ;	Clock out Enable bit
   616                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   617                           ;	PRLOCKED One-Way Set Enable bit
   618                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
   619                           ;	Clock Switch Enable bit
   620                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   621                           ;	Fail-Safe Clock Monitor Enable bit
   622                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   623                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
   624                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
   625                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
   626                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
   627  300001                     	org	3145729
   628  300001  FF                 	db	255
   629                           
   630                           ;Config register CONFIG3 @ 0x300002
   631                           ;	MCLR Enable bit
   632                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   633                           ;	Power-up timer selection bits
   634                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   635                           ;	Multi-vector enable bit
   636                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   637                           ;	IVTLOCK bit One-way set enable bit
   638                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
   639                           ;	Low Power BOR Enable bit
   640                           ;	LPBOREN = OFF, Low-Power BOR disabled
   641                           ;	Brown-out Reset Enable bits
   642                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   643  300002                     	org	3145730
   644  300002  FF                 	db	255
   645                           
   646                           ;Config register CONFIG4 @ 0x300003
   647                           ;	Brown-out Reset Voltage Selection bits
   648                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
   649                           ;	ZCD Disable bit
   650                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
   651                           ;	PPSLOCK bit One-Way Set Enable bit
   652                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
   653                           ;	Stack Full/Underflow Reset Enable bit
   654                           ;	STVREN = ON, Stack full/underflow will cause Reset
   655                           ;	Low Voltage Programming Enable bit
   656                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   657                           ;	Extended Instruction Set Enable bit
   658                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   659  300003                     	org	3145731
   660  300003  FF                 	db	255
   661                           
   662                           ;Config register CONFIG5 @ 0x300004
   663                           ;	WDT Period selection bits
   664                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   665                           ;	WDT operating mode
   666                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   667  300004                     	org	3145732
   668  300004  9F                 	db	159
   669                           
   670                           ;Config register CONFIG6 @ 0x300005
   671                           ;	WDT Window Select bits
   672                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   673                           ;	WDT input clock selector
   674                           ;	WDTCCS = SC, Software Control
   675  300005                     	org	3145733
   676  300005  FF                 	db	255
   677                           
   678                           ;Config register CONFIG7 @ 0x300006
   679                           ;	Boot Block Size selection bits
   680                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   681                           ;	Boot Block enable bit
   682                           ;	BBEN = OFF, Boot block disabled
   683                           ;	Storage Area Flash enable bit
   684                           ;	SAFEN = OFF, SAF disabled
   685                           ;	Background Debugger
   686                           ;	DEBUG = OFF, Background Debugger disabled
   687  300006                     	org	3145734
   688  300006  FF                 	db	255
   689                           
   690                           ;Config register CONFIG8 @ 0x300007
   691                           ;	Boot Block Write Protection bit
   692                           ;	WRTB = OFF, Boot Block not Write protected
   693                           ;	Configuration Register Write Protection bit
   694                           ;	WRTC = OFF, Configuration registers not Write protected
   695                           ;	Data EEPROM Write Protection bit
   696                           ;	WRTD = OFF, Data EEPROM not Write protected
   697                           ;	SAF Write protection bit
   698                           ;	WRTSAF = OFF, SAF not Write Protected
   699                           ;	Application Block write protection bit
   700                           ;	WRTAPP = OFF, Application Block not write protected
   701  300007                     	org	3145735
   702  300007  FF                 	db	255
   703                           
   704                           ;Config register CONFIG9 @ 0x300008
   705                           ;	PFM and Data EEPROM Code Protection bit
   706                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   707  300008                     	org	3145736
   708  300008  FF                 	db	255
   709                           
   710                           ; Padding undefined space
   711  300009                     	org	3145737
   712  300009  FF                 	db	255
   713                           tosu	equ	0x4FF
   714                           tosh	equ	0x4FE
   715                           tosl	equ	0x4FD
   716                           stkptr	equ	0x4FC
   717                           pclatu	equ	0x4FB
   718                           pclath	equ	0x4FA
   719                           pcl	equ	0x4F9
   720                           tblptru	equ	0x4F8
   721                           tblptrh	equ	0x4F7
   722                           tblptrl	equ	0x4F6
   723                           tablat	equ	0x4F5
   724                           prodh	equ	0x4F4
   725                           prodl	equ	0x4F3
   726                           indf0	equ	0x4EF
   727                           postinc0	equ	0x4EE
   728                           postdec0	equ	0x4ED
   729                           preinc0	equ	0x4EC
   730                           plusw0	equ	0x4EB
   731                           fsr0h	equ	0x4EA
   732                           fsr0l	equ	0x4E9
   733                           wreg	equ	0x4E8
   734                           indf1	equ	0x4E7
   735                           postinc1	equ	0x4E6
   736                           postdec1	equ	0x4E5
   737                           preinc1	equ	0x4E4
   738                           plusw1	equ	0x4E3
   739                           fsr1h	equ	0x4E2
   740                           fsr1l	equ	0x4E1
   741                           bsr	equ	0x4E0
   742                           indf2	equ	0x4DF
   743                           postinc2	equ	0x4DE
   744                           postdec2	equ	0x4DD
   745                           preinc2	equ	0x4DC
   746                           plusw2	equ	0x4DB
   747                           fsr2h	equ	0x4DA
   748                           fsr2l	equ	0x4D9
   749                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_msDelay

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     174
                            _AppInit
                            _led0Off
                             _led0On
                            _msDelay
 ---------------------------------------------------------------------------------
 (1) _msDelay                                              3     1      2     174
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _led0On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led0Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppInit                                              0     0      0       0
                            _ledInit
                        _msDelayInit
 ---------------------------------------------------------------------------------
 (2) _msDelayInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ledInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppInit
     _ledInit
     _msDelayInit
   _led0Off
   _led0On
   _msDelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBIGSFR_1        100      0       0      36        0.0%
BITBIGSFRhhh        37      0       0      37        0.0%
BITBIGSFRhhl         7      0       0      38        0.0%
BITBIGSFRhl         AF      0       0      39        0.0%
BITBIGSFRl         410      0       0      40        0.0%
ABS                  0      0       0      41        0.0%
BIGRAM             FFF      0       0      42        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun  2 09:31:33 2022

                             l23 FFA0                               l32 FF96  
                             l17 FFA6                               l35 FF86  
                             l52 FFFA                               l46 FF7E  
                             l38 FF82                               u20 FFFA  
                             u21 FFF6                               u37 FFD8  
                            l730 FF98                              l740 FF80  
                            l732 FF84                              l750 FFCE  
                            l728 FF8E                              l752 FFD2  
                            l760 FFB6                              l754 FFE2  
                            l756 FFA2                              l758 FFAA  
                   ?_msDelayInit 0501                              wreg 0004E8  
                           _main FFA2                             start FFFC  
                __end_of_AppInit FFA2                     ___param_bank 000000  
                          ?_main 0501                  __end_of_led0Off FF84  
                __end_of_ledInit FF98                  __end_of_msDelay FFFC  
                          status 0004D8                  __initialization FF88  
                   __end_of_main FFCE                           ??_main 0504  
                  __activetblptr 000000                        ??_AppInit 0501  
                         _led0On FF84                        ??_led0Off 0501  
                         isa$std 000001                        ??_ledInit 0501  
                      ??_msDelay 0503                       __accesstop 0560  
        __end_of__initialization FF88                    ___rparam_used 000001  
                 __pcstackCOMRAM 0501                          ?_led0On 0501  
                        _AppInit FF98                          __Hparam 0000  
                        __Lparam 0000                          _led0Off FF80  
                        __pcinit FF88                          __ramtop 1500  
                        __ptext0 FFA2                          __ptext1 FFCE  
                        __ptext2 FF84                          __ptext3 FF80  
                        __ptext4 FF98                          __ptext5 FF7E  
                        __ptext6 FF8E                          _ledInit FF8E  
                        _msDelay FFCE             end_of_initialization FF88  
                      _TRISCbits 0004C8                   __end_of_led0On FF88  
                  ??_msDelayInit 0501              start_initialization FF88  
                       ??_led0On 0501              __end_of_msDelayInit FF80  
                       ?_AppInit 0501                         ?_led0Off 0501  
                       ?_ledInit 0501                         ?_msDelay 0501  
                       _LATCbits 0004C0                      _msDelayInit FF7E  
msDelay@DelayValueInMilliseconds 0501                         __Hrparam 0000  
                       __Lrparam 0000                       _ANSELCbits 000410  
                       isa$xinst 000000  
